name: Deploy to Server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy Application
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USER }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "mkdir -p /var/www/card-dive-paris"
          sshpass -p "$SSH_PASSWORD" rsync -rltgoDzvO --delete ./ $REMOTE_USER@$REMOTE_HOST:/var/www/card-dive-paris/

      - name: Run Deployment Script
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USER }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "chmod +x /var/www/card-dive-paris/run-app-deploy.sh"
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "cd /var/www/card-dive-paris && ./run-app-deploy.sh --prod"

      - name: Clean Docker Trash
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USER }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "docker image prune -f && docker volume prune -f && docker system prune -f"